on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ['3.6', '3.7', '3.8', '3.8-dev', '3.9', '3.9-dev', '3.10-dev']
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Python ${{ matrix.python }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }} 
      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install -r dev-requirements.txt
      - name: Show python version and show package
        run: |
          python --version
          sopel --version
          pip show MirahezeBot-Plugins
      - name: Run tests
        run: |
          flake8 MirahezeBots/plugins --max-line-length 265 --exclude=__init__.py
          flake8 tests --max-line-length 265
          flake8 MirahezeBots/utils --max-line-length 265 --exclude=__init__.py
          pytest tests/test_general.py
          pip-missing-reqs --ignore-file=setup.py --ignore-module=pytest --ignore-module=MirahezeBots.* . --ignore-file=tests/*
          pip-extra-reqs --ignore-requirement=sopel-plugins.adminlist --ignore-requirement=sopel-plugins.channelmgnt --ignore-requirement=sopel-plugins.pingpong --ignore-requirement=sopel-plugins.joinall .
          pip check
      - name: Run pip freeze and pipdeptree
        run: |
          pip freeze
          pipdeptree
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install pypa/build
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Build a binary wheel and a source tarball
        run: pyproject-build --sdist --wheel --outdir dist .
      - name: Publish to PyPi
        if: github.event_name == 'push' && github.ref == 'refs/heads/release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_token }}
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
